(window.webpackJsonp=window.webpackJsonp||[]).push([[7,2],{275:function(t,e,r){var content=r(277);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[t.i,content,""]]),content.locals&&(t.exports=content.locals);(0,r(54).default)("42746b96",content,!0,{sourceMap:!1})},276:function(t,e,r){"use strict";r(275)},277:function(t,e,r){var o=r(53)(!1);o.push([t.i,".container[data-v-e1118da4]{background-color:hsla(0,0%,100%,.15);-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px);box-shadow:0 0 5px hsla(0,0%,94.1%,.7);border-radius:1em}.content[data-v-e1118da4]{margin:1em}",""]),t.exports=o},281:function(t,e,r){var content=r(291);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[t.i,content,""]]),content.locals&&(t.exports=content.locals);(0,r(54).default)("0bb5d446",content,!0,{sourceMap:!1})},283:function(t,e,r){"use strict";r.r(e);r(276);var o=r(22),component=Object(o.a)({},(function(){var t=this._self._c;return t("div",{staticClass:"container"},[t("div",{staticClass:"content"},[this._t("default")],2)])}),[],!1,null,"e1118da4",null);e.default=component.exports},290:function(t,e,r){"use strict";r(281)},291:function(t,e,r){var o=r(53)(!1);o.push([t.i,".logos{display:flex;justify-content:center;flex-wrap:wrap}.logos img{height:3.5em;margin:1em;transition:transform .5s 0s}.logos img:hover{transition:transform .5s 0s;transform:scale(1.1)}.cards{margin:.75em;display:grid;grid-template-columns:1fr 1fr}.cards>*{margin:.6em;grid-column:1/span 2;width:calc(60% - 1.2em);min-width:275px;transition:transform .2s 0s}.cards>:nth-child(odd){justify-self:start}.cards>:nth-child(odd):hover{transform:rotate(1deg) scale(1.05)}.cards>:nth-child(2n){justify-self:end}.cards>:nth-child(2n):hover{transform:rotate(-1deg) scale(1.05)}",""]),t.exports=o},303:function(t,e,r){"use strict";r.r(e);r(290);var o=r(22),component=Object(o.a)({},(function(){var t=this,e=t._self._c;return e("div",[e("div",{staticClass:"cards"},[e("glass-card",[e("p",[t._v("\n        At the moment, our software consits out of three pieces. At first we\n        have the frontend, hanging on your main entrance. This piece we call\n        the base or sometimes core. Then there is the app, which is running on\n        your smarthphone, your tablet and your desktop pc. And finally there\n        is some type of service, which could be used, for example to send push\n        notifications from the base to the app. I know, I said there are three\n        pieses, but if we take it exactly, there is one more. We will call the\n        fourth component third party, ironicg. The third party compontent is\n        something like fhem as smarthome system or mosquitto as mqtt broker.\n      ")])]),t._v(" "),e("glass-card",[e("p",{staticClass:"headline"},[t._v("the base")]),t._v(" "),e("p",[t._v("work in progress...")])]),t._v(" "),e("glass-card",[e("p",{staticClass:"headline"},[t._v("the app")]),t._v(" "),e("p",[e("a",{staticStyle:{color:"grey"},attrs:{href:"https://app.dieklingel.de/"}},[t._v("Check it out!")])])]),t._v(" "),e("glass-card",[e("p",{staticClass:"headline"},[t._v("services")]),t._v(" "),e("p",[t._v("work in progress...")])]),t._v(" "),e("glass-card",[e("p",{staticClass:"headline"},[t._v("third party")]),t._v(" "),e("p",[t._v('\n        As third party components we look at the mosquitto mqtt broker. We use\n        mqtt as our main protocol. So you have to use mosquitto or any other\n        mqtt broker of your choice to connect with. Another third party is a\n        smarthome system like fhem. The base is kept lightweight, without much\n        of service included, but extenable. Use fhem to save a picture to your\n        database, notify your app, or even control the display. In combination\n        with fhem you could use another service distributed by us. The service\n        we talk about is called dieklingel-fcm-worker and it provides an an\n        api to send push notifications to the dieklingel-app over another\n        third party component called "Google Firebase Cloud Messaging". It\n        comes to a chain of services, third party components and built in\n        functions, all configured by the user.\n      ')])])],1),t._v(" "),t._m(0)])}),[function(){var t=this,e=t._self._c;return e("div",{staticClass:"logos"},[e("a",{attrs:{href:"https://flutter.dev/",target:"_blank"}},[e("img",{attrs:{src:"https://storage.googleapis.com/cms-storage-bucket/6a07d8a62f4308d2b854.svg",alt:"flutter-logo"}})]),t._v(" "),e("a",{attrs:{href:"https://webrtc.org/",target:"_blank"}},[e("img",{attrs:{src:"https://www.gstatic.com/devrel-devsite/prod/vbf6b989196010ceeb8e96a715bcffec43e0681e7e60c6ad6a2fb8ac1de5f2a0f/webrtc/images/lockup.svg",alt:"webrtc-logo"}})]),t._v(" "),e("a",{attrs:{href:"https://mqtt.org/",target:"_blank"}},[e("img",{attrs:{src:"https://mqtt.org/assets/img/mqtt-logo.svg",alt:"mqtt-logo"}})]),t._v(" "),e("a",{attrs:{href:"https://www.raspberrypi.org/",target:"_blank"}},[e("img",{attrs:{src:"https://www.raspberrypi.org/pagekit-assets/media/images/4913a547895720ff30c1.svg",alt:"raspberrypi-logo"}})])])}],!1,null,null,null);e.default=component.exports;installComponents(component,{GlassCard:r(283).default})}}]);